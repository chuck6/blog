(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{1214:function(e,s,t){"use strict";t.r(s);var a=t(15),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"prometheus联邦配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prometheus联邦配置"}},[e._v("#")]),e._v(" Prometheus联邦配置")]),e._v(" "),a("Badge",{attrs:{text:"prometheus",type:"warning"}}),e._v(" "),a("Badge",{attrs:{text:"联邦"}}),e._v(" "),a("h2",{attrs:{id:"理论知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理论知识"}},[e._v("#")]),e._v(" 理论知识")]),e._v(" "),a("p",[e._v("单个Prometheus Server可以轻松处理数以百万级的时间序列，当数据规模扩大时，可以使用联邦集群的方式对Prometheus进行扩展。")]),e._v(" "),a("p",[e._v("对于大部分监控规模而言，只需要在每一个数据中心(例如EC2可用区、Kubernetes集群)安装一个Prometheus Server实例，就可以在各个数据中心处理上千规模的集群，这样单一Prometheus Server对于不同数据中心采集时，避免网络配置的复杂性。")]),e._v(" "),a("p",[e._v("如下面的联邦集群架构所示，在每个数据中心部署单独的Prometheus L用于采集当前数据中心的监控数据。并由一个中心的Prometheus H负责聚合多个数据中心的监控数据。")]),e._v(" "),a("p",[a("img",{attrs:{src:t(510),alt:"image-20220220175042103"}})]),e._v(" "),a("h2",{attrs:{id:"部署配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署配置"}},[e._v("#")]),e._v(" 部署配置")]),e._v(" "),a("h3",{attrs:{id:"目标要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标要求"}},[e._v("#")]),e._v(" 目标要求")]),e._v(" "),a("p",[e._v("目前的现状是，已有一套Prometheus L1，里面已经针对性的采集了数据库的同步延迟的告警数据信息，目前我们想要通过采集这套Prometheus中的数据到 Prometheus H1中，然后自定义推送告警。")]),e._v(" "),a("p",[e._v("Element是：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('otter_delay{delay{instance="192.168.1.100:9508",job="otter_sync",sync_plan_id="1",sync_plan_name="A资源池aaa业务oralce--\x3eB资源池bbb业务mysql",tags_id="11111111111111"}}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("对应的value值就是相应的同步延迟的时间。")]),e._v(" "),a("h3",{attrs:{id:"联邦配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联邦配置"}},[e._v("#")]),e._v(" 联邦配置")]),e._v(" "),a("p",[e._v("针对Prometheus H1 进行配置，在prometheus的配置文件中，增加下面的配置。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("scrape_configs:\n  - job_name: 'federate_otter_sync'\n    scrape_interval: 60s\n    honor_labels: true\n    metrics_path: '/federate'\n    params:\n      'match[]':\n        - '{job=\"otter_sync\"}'\n    static_configs:\n      - targets:\n        - '1.1.1.1:9090'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("可以选择下面的两种方式让prometheus 生效。")]),e._v(" "),a("p",[a("code",[e._v("kill -HUP pid")]),e._v("  pid为查到的Prometheus的进程id")]),e._v(" "),a("p",[e._v("或者通过HTTP API 发送post请求到 /-/reload")]),e._v(" "),a("p",[a("code",[e._v("curl -X POST http://localhost:9090/-/reload")])]),e._v(" "),a("ul",[a("li",[e._v("这里定义了一个job的名字是 'federate_otter_sync'.")]),e._v(" "),a("li",[e._v("scrape_interval: 60s  ，设置的是抓取数据的周期，默认是1分钟1次。")]),e._v(" "),a("li",[e._v('honor_labels: true ， 如果配置为true的话，可以确保当采集到的监控指标冲突的时候，能够自动忽略冲突的监控数据；如果配置为false, Prometheus 会自动将冲突的标签替换为"exported_" 的形式。')]),e._v(" "),a("li",[e._v("match[] 参数指定了 我们需要获取的时间序列，match[] 参数必须是一个瞬时向量选择器。可以配置多个match[]参数，大部分情况下就是匹配原有的prometheus中的job，测试过没办法使用PromQL的方式来过滤指标项，针对性的打上数据标签，只能在后续的rules里面用PromQL过滤指标项，打上告警标签。")]),e._v(" "),a("li",[e._v("'1.1.1.1:9090' 这个就是源端的 prometheus的地址。")])]),e._v(" "),a("h3",{attrs:{id:"配置告警规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置告警规则"}},[e._v("#")]),e._v(" 配置告警规则")]),e._v(" "),a("p",[e._v("我们这里需要对 某些特定的tags_id 并且 某些特定的sync_plan_id 来打上告警标签，推送告警，告警阈值是20分钟。")]),e._v(" "),a("p",[e._v("例如我要求 tags_id 是'1111111' 并且sync_plan_id 是\"1或者2或者3\"的 item的value 大于20分钟时，推送告警。")]),e._v(" "),a("p",[e._v("PromQL的逻辑就是，一个大的PromQL里面内嵌多个小的PromQL，之间是or的关系。内部的PromQL里面又包含2个PromQL，这2个PromQL语句之间是and的关系，也就是tags_id是某个值，sync_plan_id 是可能是多个值。")]),e._v(" "),a("p",[e._v("在alert的rule 的配置中，增加下面的配置项：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('   - alert: xx系统otter_delay延迟大于20分钟\n     expr: (otter_sync{tags_id="1111111"}  and otter_sync{sync_plan_id=~"1|3|5" } > 20) or (otter_sync{tags_id="2222222"} and otter_sync{sync_plan_id =~"2|4|6" } > 20)\n     for: 5m\n     labels:\n      severity: warning\n      app: xx系统\n     annotations:\n      summary: "检测到otter_delay同步延迟"\n      description: \'当前延迟时长是{{ printf "%.2f" $value }}分钟)\'\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("同样可以采用上面提及的两种方法，让prometheus对于配置文件生效。")]),e._v(" "),a("ul",[a("li",[e._v("alert 描述的是告警规则的名称")]),e._v(" "),a("li",[e._v("expr  描述的是使用PromQL表达式完成的告警触发条件，用于计算是否有时间序列满足该条件。")]),e._v(" "),a("li",[e._v("for 可选参数，满足告警条件持续多久时间后，才会发送告警。")]),e._v(" "),a("li",[e._v("labels 自定义的标签，允许指定额外的标签附加在告警上。")]),e._v(" "),a("li",[e._v("annotations  用来设置有关告警的一组信息标签。例如对告警的简要说明文字或相关地址链接，其内容在告警产生时会一起作为参数发送到Alertmanger.")])])],1)}),[],!1,null,null,null);s.default=r.exports},510:function(e,s,t){e.exports=t.p+"assets/img/prometheus_1.fcebf052.png"}}]);